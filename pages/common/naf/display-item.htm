<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="description" content="NAF 2008 - consultation">
		<title>NAF 2008 - consultation</title>
		<link href="../commun.css" rel="stylesheet" type="text/css"/>
		<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
		<script>
			var endpointURL = "https://rdf.insee.fr/sparql";
			var regex = new RegExp('http://id.insee.fr/codes/nafr2/[a-zC]+/', "g");
			var replacement = 'display-item.htm?code=';
			var itemTypes = ['', 'Section', 'Division', '', 'Groupe', 'Classe', 'Sous-classe'];
			var parentLength = [0, 0, 1, 0, 2, 4, 5];
			var sections = "ABCDEFGHIJKLMNOPQRSTU";
			var sectionBounds = [1, 5, 10, 35, 36, 41, 45, 49, 55, 58, 64, 68, 69, 77, 84, 85, 86, 90, 94, 97, 99];

			$(document).ready(function() {
				var code = getURLParameter('code');
				$('#fil-ariane').html('<ul>' + breadcrumbs(code, false) + '</ul>');
				getLabel(code);
			});

			function escapeHtml(text) {
				var map = {
					'&': '&amp;',
					'<': '&lt;',
					'>': '&gt;',
					'"': '&quot;',
					"'": '&#039;'
				};
				return text.replace(/[&<>"']/g, function(m) { return map[m]; });
			}

			function getLabel(code) {
				var query = "PREFIX skos:<http://www.w3.org/2004/02/skos/core#> ";
				query += "SELECT ?uri ?label WHERE {GRAPH <http://rdf.insee.fr/graphes/codes/nafr2> { ?uri skos:prefLabel ?label ; skos:notation '"
				query += escapeHtml(code) + "'. FILTER langMatches (lang(?label), 'fr')} . }";
				var queryURL = endpointURL + "?query=" + encodeURIComponent(query);

				$.getJSON(queryURL).done(function(data) {
					if (data.results.bindings.length > 0) {
						var itemURI = data.results.bindings[0].uri.value;
						$('#label').html(escapeHtml(code) + " - " + escapeHtml(data.results.bindings[0].label.value));
						getDescription(itemURI);
						var childTypeIndex = (code.length == 2 ? 4 : code.length + 1);
						getChildren(itemURI, itemTypes[childTypeIndex]);
					} else {
						$('#label').html("<p>Code non trouv√©</p>");
					}
				}).fail(function() {
					// Handle error silently
				});
			}

			function getDescription(itemURI) {
				var query = "PREFIX skos:<http://www.w3.org/2004/02/skos/core#> DESCRIBE <" + itemURI + ">";
				var queryURL = endpointURL + "?query=" + encodeURIComponent(query);

				$.getJSON(queryURL).done(function(data) {
					if (data.results.bindings.length > 0) {
						for (var index = 0; index < data.results.bindings.length; index++) {
							var bindingObject = data.results.bindings[index];
							if (bindingObject.predicate.value === "http://www.w3.org/2004/02/skos/core#scopeNote") getNote(bindingObject.object.value, "note-generale");
							else if (bindingObject.predicate.value === "http://rdf-vocabulary.ddialliance.org/xkos#coreContentNote") getNote(bindingObject.object.value, "contenu-central");
							else if (bindingObject.predicate.value === "http://rdf-vocabulary.ddialliance.org/xkos#additionalContentNote") getNote(bindingObject.object.value, "contenu-limite");
							else if (bindingObject.predicate.value === "http://rdf-vocabulary.ddialliance.org/xkos#exclusionNote") getNote(bindingObject.object.value, "exclusions");
							else if (bindingObject.predicate.value === "http://www.w3.org/2004/02/skos/core#note") getNote(bindingObject.object.value, "remarques");
						}
					}
				}).fail(function() {
					// Handle error silently
				});
			}

			function getChildren(itemURI, childType) {
				var query = "PREFIX skos:<http://www.w3.org/2004/02/skos/core#> SELECT ?code ?label WHERE { <" + escapeHtml(itemURI) + "> skos:narrower ?child . ";
				query += "?child skos:notation ?code ; skos:prefLabel ?label . FILTER langMatches (lang(?label), 'fr') } ORDER BY ?code";
				var queryURL = endpointURL + "?query=" + encodeURIComponent(query);

				$.getJSON(queryURL).done(function(data) {
					if (data.results.bindings.length > 0) {
						var innerHTML = '<p class="nom-enfants">' + escapeHtml(childType) + (data.results.bindings.length > 1 ? 's' : '') + '</p><ul class="enfants">';
						for (var index = 0; index < data.results.bindings.length; index++) {
							var childCode = data.results.bindings[index].code.value;
							innerHTML += '<li><p><a href="display-item.htm?code=' + escapeHtml(childCode) + '">' + escapeHtml(childCode) + ' - ' + escapeHtml(data.results.bindings[index].label.value) + '</a></p></li>';
						}
						innerHTML += '</ul>';
						$('#sous-items').html(innerHTML);
						$('#sous-items').addClass("sous-items");
					}
				}).fail(function() {
					// Handle error silently
				});
			}

			function getURLParameter(name) {
    			return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20')) || null;
			}

			function getNote(uri, tag) {
				var query = 'SELECT ?text WHERE { <' + uri + '> <http://eurovoc.europa.eu/schema#noteLiteral> ?text }';
				var queryURL = endpointURL + "?query=" + encodeURIComponent(query);

				$.getJSON(queryURL).done(function(data) {
					if (data.results.bindings.length > 0) {
						var noteText = data.results.bindings[0].text.value.replace(regex, replacement);
						$('#' + tag).append(escapeHtml(noteText).replace(/\\\$/g, "<br />"));
						$('#' + tag).addClass(tag);
					}
				}).fail(function() {
					// Handle error silently
				});
			}

			function breadcrumbs(code, finalLink) {
				var name = escapeHtml(itemTypes[code.length] + ' ' + code);
				var html;
				var fin = (finalLink ?
					('<li><a href="display-item.htm?code=' + escapeHtml(code) + '" title="' + name + '">' + name + '</a></li>')
					: ('<li>' + name + '</li>')
				);

				if (code.length == 1) {
					html = '<li><a href="naf.htm" title="Accueil">NAF</a></li>&nbsp;' + fin;
				} else {
					html = breadcrumbs(getParentCode(code), true) + '&nbsp;' + fin;
				}
				return html;
			}

			function getParentCode(code) {
				if (code.length > 3) return code.substr(0, parentLength[code.length]);
				if (code.length == 2) {
					var codeNum = parseFloat(code);
					for (var index = 0; index < sectionBounds.length; index++) {
						if (codeNum < sectionBounds[index]) return sections.substr(index - 1, 1);
					}
					return sections.substr(sectionBounds.length - 1, 1);
				}
				return null;
			}

		</script>
	</head>
	<body>
		<div id="fil-ariane"></div>
		<h1 id="label" class="item"></h1>
		<br/>
		<div id="notes">
			<div id="note-generale"></div>
			<div id="contenu-central"></div>
			<div id="contenu-limite"></div>
			<div id="exclusions"></div>
			<div id="remarques"></div>
		</div>
		<div id="sous-items"></div>
	</body>
</html>
