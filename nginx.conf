server {
    listen 8080;
    server_name $app_url;

    # Définir les variables d'environnement
    set $impala_uri "http://$host";

    # Règle 2 : Rediriger la racine vers /index.html
    location = / {
        return 301 /index.html;
    }

    # Règle 3 : Ne pas réécrire les fichiers avec certaines extensions
    location ~* \.(html|zip|txt|json|map|png|css|ico|rdf|htm|ttl)$ {
        try_files $uri $uri/ =404;
    }

    # Règle 5 : Rediriger les requêtes GET vers /sparql sans text/html dans Accept
    location = /sparql {
        if ($http_accept !~ "text/html") {
            set $args $args&query;
            proxy_pass $rdf4j_api_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Règle 6 : Ne pas réécrire les requêtes GET vers /sparql
    location = /sparql {
        if ($request_method = GET) {
            return 200;
        }
    }

    # Règle 7 : Rediriger les requêtes POST vers /sparql sans text/html dans Accept
    location = /sparql {
        if ($request_method = POST) {
            if ($http_accept !~ "text/html") {
                proxy_pass $rdf4j_api_uri;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }

    # Règle 9 : Rediriger les requêtes avec text/html dans Accept
    location / {
        if ($http_accept ~ "text/html") {
            return 302 /sparql?query=DESCRIBE<$impala_uri$request_uri>;
        }
    }

    # Règle 10 : Ajouter l'en-tête Access-Control-Allow-Origin
    add_header Access-Control-Allow-Origin "*";

    # Règle 11 : Ajouter l'en-tête Server
    add_header Server "nginx";
}
